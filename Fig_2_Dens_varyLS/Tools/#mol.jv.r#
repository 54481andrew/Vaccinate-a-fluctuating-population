
rhs.mol <- function(t,y,parms){

	Sval  <- y[0 + 1:Nx]
	Vval  <- y[1*Nx + 1:Nx]
	RVval <- y[2*Nx + 1:Nx]

        with(parms,{

		S.Bc    <- c(Sval[2],Sval,Sval[Nx-1])
		V.Bc    <- c(Vval[2],Vval,Vval[Nx-1])
		RV.Bc   <- c(RVval[2],RVval,RVval[Nx-1])

		#Use state variables with ghost points to compute transport terms
     	        dSTrans  <- 1/kap*diff(diff(S.Bc)/dxp)/dxe
	        dVTrans  <- 1/kap*diff(diff(V.Bc)/dxp)/dxe
	        dRVTrans <- 1/kap*diff(diff(RV.Bc)/dxp)/dxe

                #Compute the differentials
                dS  <- dSTrans - Rv*Sval*Vval + 
                       dh*(1-Sval)
		dV  <- dVTrans + Rv*Sval*Vval - Vval 
		dRV <- dRVTrans + (1-dh)*Vval - dh*RVval

    	     	dy  <- as.vector(c(dS,dV,dRV))

                
		return(list(dy, c(min(Sval),max(Sval))))

		})

}


vaccinate <- function(t,y,parms){
    with(parms, {
        Sval   <- y[0 + 1:Nx]
        Vval   <- y[1*Nx + 1:Nx]
        RVval  <- y[2*Nx + 1:Nx]
        TotV   <- Vval + RVval
###Vaccinate sig of TotV
        Svacc    <- Sval*(1 - sig*vaccdist)
        Vvacc    <- Vval + sig*vaccdist*Sval
        y        <- c(Svacc, Vvacc, RVval)
return(y) 
    })
}

rootfun <- function(t,y,parms){
    with(parms, {return( t*TScale - TDrop) })
}
