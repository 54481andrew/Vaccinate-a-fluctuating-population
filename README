
## -----General-----

## This code is used to generate the figures displayed in
## the paper "When to vaccinate a fluctuating wildlife population: is timing everything?".
## Most directories contain a simulation script to generate
## the data, and a graphing script to produce the EPS figures.
## Some figures do not require much simulation (e.g. Figure 1), and in these
## cases the simulation and graphing are combined into a single
## script. Data that appears in figures 6 and 8 are simulated
## using C++ - see the notes section for details on how to
## simulate these. 

## Parameters for the simulations are specified in a dataframe
## called parmat. Time units are days. The parameter names are

## -----Parameter List------

## d - rate of host death from natural causes
## gamv - rate at which hosts transition from class Sv to V
## Nv - number of hosts exposed to vaccine during each campaign
## tv - the timing of annual vaccination, measured as days into the year
## tb - the duration of the birthing season
## NPeak - the peak population size, achieved once per year
## Rp - basic reproduction number of the pathogen
## Bp - transmission coefficient of the pathogen
## gamp - rate at which infected hosts transition out of infected class
## pmu - probability an infected host dies from infection (rather than recovers) 

## -----Simulation times-----

## Many of these simulations were run using parallel computation. In these
## cases, we show effective cpu minutes (number of cores used x total simulation time)

## Figure 1: < 1 minute
## Figure 2: 154 cpu minutes
## Figure 3: 316 cpu minutes (when 25 tb values used. Figure generated with 365 values)
## Figure 4: 137 core minutes   
## Figure 5: < 1 minute
## Figure 6: see below
## Figure 7: < 1 minute
## Figure 8: see below
## Table: 81 cpu minutes

## ------Notes-----

## --The birth rate "b" parameter is specified by choosing
## parameter values for NPeak, d, and tb. 

## --Figures 6 and 8

## These figures are generated by scripts written in C++. The "Sim.cpp" and "Sim_Base.cpp"
## calculate the outcome of vaccination in simulations with and without vaccination,
## respectively. We save time by initializing all simulations near the stable limit
## cycle of the corresponding ODE. This is specified in the pars.h file, which both
## scripts use for parameters.
## The stable limit cycle is calculated in the Graph_JustPath.r script within the
## Initial_Condition directory. Graph_JustPath.r prints the values of the state
## variables at time t%%365 = 0. These values are used in the pars.h header file to
## intialize the simulations.

## These scripts can be run by compiling, then running the compiled code. The Graph.r
## script (in the Fig_6 and Fig_8 directories) reads in the simulated data, and produces
## a 2x2 figure that shows the reduction in mean abundance of pathogen-infected hosts,
## as well as the probability of elimination, with respect to the timing of vaccination.

## Instead of running each script separately, we've included a makefile that
## 1. compiles and runs Sim_Base.cpp, Sim.cpp
## 2. runs Graph.r to produce the figure




